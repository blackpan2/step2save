# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class StreetAddress(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, street_name: str=None, city: str=None, state: str=None, zip: int=None):
        """
        StreetAddress - a model defined in Swagger

        :param street_name: The street_name of this StreetAddress.
        :type street_name: str
        :param city: The city of this StreetAddress.
        :type city: str
        :param state: The state of this StreetAddress.
        :type state: str
        :param zip: The zip of this StreetAddress.
        :type zip: int
        """
        self.swagger_types = {
            'street_name': str,
            'city': str,
            'state': str,
            'zip': int
        }

        self.attribute_map = {
            'street_name': 'street_name',
            'city': 'city',
            'state': 'state',
            'zip': 'zip'
        }

        self._street_name = street_name
        self._city = city
        self._state = state
        self._zip = zip

    @classmethod
    def from_dict(cls, dikt) -> 'StreetAddress':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StreetAddress of this StreetAddress.
        :rtype: StreetAddress
        """
        return deserialize_model(dikt, cls)

    @property
    def street_name(self) -> str:
        """
        Gets the street_name of this StreetAddress.

        :return: The street_name of this StreetAddress.
        :rtype: str
        """
        return self._street_name

    @street_name.setter
    def street_name(self, street_name: str):
        """
        Sets the street_name of this StreetAddress.

        :param street_name: The street_name of this StreetAddress.
        :type street_name: str
        """

        self._street_name = street_name

    @property
    def city(self) -> str:
        """
        Gets the city of this StreetAddress.

        :return: The city of this StreetAddress.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city: str):
        """
        Sets the city of this StreetAddress.

        :param city: The city of this StreetAddress.
        :type city: str
        """

        self._city = city

    @property
    def state(self) -> str:
        """
        Gets the state of this StreetAddress.

        :return: The state of this StreetAddress.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state: str):
        """
        Sets the state of this StreetAddress.

        :param state: The state of this StreetAddress.
        :type state: str
        """

        self._state = state

    @property
    def zip(self) -> int:
        """
        Gets the zip of this StreetAddress.

        :return: The zip of this StreetAddress.
        :rtype: int
        """
        return self._zip

    @zip.setter
    def zip(self, zip: int):
        """
        Sets the zip of this StreetAddress.

        :param zip: The zip of this StreetAddress.
        :type zip: int
        """

        self._zip = zip

